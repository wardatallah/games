{"version":3,"sources":["utils.js","globals.js","serviceWorker.js","Main/App.js","services/emitter.js","XoxoGame/XoxoGame.js","XoxoGame/XoxoLogin.js","XoxoGame/XoxoMainView.js","XoxoGame/XoxoCreateGameView.js","index.js"],"names":["globals","require","module","exports","getMainUrl","url","apiHost","apiPort","getServerURL","serverURL","process","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","App","className","to","Component","eventEmitter","EventEmitter","Emitter","on","event","fn","once","off","emit","payload","Object","freeze","utils","winningSet","firstRow","secondRow","thirdRow","firstColumn","secondColumn","thirdColumn","firstDiameter","secondDiameter","override","css","socket","socketIO","connect","createData","firstCell","secondCell","thirdCell","first","key","value","second","third","DecisionDiv","props","decision","ExitDiv","exitLink","href","style","marginBottom","XoxoGame","playerNumber","playerName","data","turn","second_player","pending","players_number","myTurn","player1Score","player1_score","player2Score","player2_score","gameEnded","game_finished","waitingMsg","decisionNum","otherPlayerRefused","cellData","resetData","cellClicked","bind","checkClass","rematchDecisionClicked","updateRematchDecision","mainUrl","result","updateResult","first_player","id","game_number","refreshData","this","setState","isNewPlayer","rematchOne","rematchTwo","gameNumber","nextTurn","self","fetch","method","headers","body","JSON","stringify","response","json","preventDefault","currentTarget","tempData","cellUpdated","_","find","obj","setCellValue","player_turn","parse","checkWinner","rematch","rematch_player1","rematch_player2","isEmpty","numberOfFilledCells","each","push","winningSetKeys","keys","checkValues","colorizeWinningCells","array","winner","num","el","document","getElementById","innerHTML","classList","add","playerKey","playerScore","attr","intervalMsg","setInterval","updatingWaitingMsg","clearInterval","interval","cell","endsWith","gamePendingStyle","display","gameFull","width","maxWidth","gameEndedStyle","playerRefusedToRematchStyle","decisionMadeStyle","rematchModalStyle","color","sizeUnit","size","margin","loading","marginTop","Paper","Table","TableBody","overflowX","map","row","TableRow","TableCell","align","onClick","type","SubmitButton","notRandom","XoxoLogin","reason","randomGame","loginToGame","handleSwitchChange","refs","number","pass","name","gamePass","get","ReactDOM","render","notRandomStyle","randomStyle","isRequired","onSubmit","required","ref","placeholder","Switch","checked","onChange","inputProps","XoxoMainView","XoxoCreateGameView","privateSwitch","createGame","privateStyle","routing","basename","exact","path","component","URL","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9e01c443.chunk.js","sourcesContent":["const globals = require('./globals.js');\n\nmodule.exports = {\n\tgetMainUrl: function () {\n\t\tlet url = globals.apiHost;\n\t\tif (globals.apiPort) {\n\t\t\turl = `${globals.apiHost}:${globals.apiPort}`;\n\t\t}\n\t\treturn url;\n\t},\n\tgetServerURL: function () {\n\t\treturn globals.serverURL;\n\t}\n}\n","module.exports = {\n\tapiHost: process.env.NODE_ENV === 'development' ? `http://${window.location.hostname}` : process.env.REACT_APP_API_HOST,\n\tapiPort: process.env.NODE_ENV === 'development' ? 3000 : null,\n\tserverURL: process.env.NODE_ENV === 'development' ? `http://${window.location.hostname}:3001` : process.env.REACT_APP_SERVER_URL,\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n// import logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t{/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n\t\t\t\t\t<p>Please Select a Game</p>\n\t\t\t\t\t<Link\n\t\t\t\t\tclassName=\"btn btn-default\"\n\t\t\t\t\tto=\"/game-xoxo-main\">\n\t\t\t\t\t\tXOXO Game\n\t\t\t\t\t</Link>\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import EventEmitter from 'eventemitter3';\n\nconst eventEmitter = new EventEmitter();\n\nconst Emitter = {\n  on: (event, fn) => eventEmitter.on(event, fn),\n  once: (event, fn) => eventEmitter.once(event, fn),\n  off: (event, fn) => eventEmitter.off(event, fn),\n  emit: (event, payload) => eventEmitter.emit(event, payload)\n}\n\nObject.freeze(Emitter);\n\nexport default Emitter;","import React, { Component } from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n// import TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { css } from '@emotion/core';\nimport GridLoader from 'react-spinners/GridLoader';\nimport Emitter from '../services/emitter';\nimport socketIO from \"socket.io-client\";\n\nimport _ from 'lodash';\nimport './XoxoGame.css';\n\nconst utils =  require('../utils.js');\nconst winningSet = {\n  firstRow: [0, 1, 2],\n  secondRow: [3, 4, 5],\n  thirdRow: [6, 7, 8],\n  firstColumn: [0, 3, 6],\n  secondColumn: [1, 4, 7],\n  thirdColumn: [2, 5, 8],\n  firstDiameter: [0, 4, 8],\n  secondDiameter: [2, 4, 6]\n};\n\nconst mainGreen = '#33b76e';\n\nconst override = css`\n    display: block;\n    margin: 0 auto;\n`;\nconst socket = socketIO.connect(\"http://localhost:3000\");\n\nfunction createData(firstCell, secondCell, thirdCell) {\n  return {\n    first: {\n      key: 'xoxo-cell' + firstCell,\n      value: ''\n    },\n    second: {\n      key: 'xoxo-cell' + secondCell,\n      value: ''\n    },\n    third: {\n      key: 'xoxo-cell' + thirdCell,\n      value: ''\n    }\n  };\n}\n\n\n// const classes = useStyles();\n\nclass XoxoGame extends Component {\n\n  playerNumber = null;\n  playerName = null;\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        data: props.data,\n        turn: !props.data.second_player ? 'X' : 'O',\n        pending: props.data.players_number !== 2,\n        myTurn: false,\n        player1Score: props.data.player1_score || 0,\n        player2Score: props.data.player2_score || 0,\n        gameEnded:  props.data.game_finished === 1 ? true : false,\n        waitingMsg: 'Waiting for opponent',\n        decisionNum: '0',\n        otherPlayerRefused: false\n      };\n      this.state.cellData = this.resetData();\n      this.cellClicked = this.cellClicked.bind(this);\n      this.checkClass = this.checkClass.bind(this);\n      this.rematchDecisionClicked = this.updateRematchDecision.bind(this);\n      this.mainUrl = utils.getMainUrl();\n      if (!props.data.result) {\n        this.updateResult(true);\n        this.playerNumber = 1;\n        this.playerName = props.data.first_player;\n      } else if (!this.playerNumber) {\n        this.playerNumber = 2;\n        this.playerName = props.data.second_player;\n      }\n\n      socket.on(`sendUpdates${props.data.id}${props.data.game_number}`, (event) => {\n        event.turn !== this.state.turn && this.refreshData();\n      });\n      socket.emit(`playerJoined`, {\n        id: props.data.id,\n        game_number: props.data.game_number,\n        turn: this.state.turn,\n      });\n   };\n\n\n  updateRematchDecision (decisionNum) {\n    if (this.playerNumber === 1) {\n      this.updateResult(null, decisionNum);\n    } else {\n      this.updateResult(null, null, decisionNum);\n    }\n\n    this.setState({\n      decisionNum: decisionNum\n    });\n  }\n\n  updateResult (isNewPlayer, rematchOne, rematchTwo) {\n    const data = {\n      result: this.state.cellData,\n      id: this.state.data.id,\n      gameNumber: this.state.data.game_number,\n      nextTurn: this.state.turn === 'X' && !isNewPlayer ? 'O' : 'X',\n      gameEnded: this.state.gameEnded,\n      player1Score: this.state.player1Score,\n      player2Score: this.state.player2Score,\n    };\n\n    if (!!rematchOne) {\n      data.rematchOne = rematchOne;\n    }\n    if (!!rematchTwo) {\n      data.rematchTwo = rematchTwo;\n    }\n    const self = this;\n    fetch(this.mainUrl + '/xoxo-games/update-game', {\n     method: 'post',\n     headers: {'Content-Type':'application/json'},\n     body: JSON.stringify(data)\n    }).then(function(response) {\n      !isNewPlayer && socket.emit(\"playerPlayed\", {\n        turn: self.state.turn,\n        id: self.state.data.id,\n        game_number: self.state.data.game_number,\n      });\n      return response.json();\n    });\n  }\n\n  resetData() {\n    return [\n        createData('1', '2', '3'),\n        createData('4', '5', '6'),\n        createData('7', '8', '9'),\n      ];\n  }\n\n  cellClicked(event) {\n    event.preventDefault();\n    var self = this;\n    if (!this.state.myTurn || !!this.state.gameEnded) return;\n    let id = event.currentTarget.id;\n    let tempData = this.state.cellData;\n    let cellUpdated = false;\n    _.find(tempData, obj => {\n      if (obj.first.key === id) {\n        cellUpdated = self.setCellValue(obj.first);\n      } else if (obj.second.key === id) {\n        cellUpdated = self.setCellValue(obj.second);\n      } else if (obj.third.key === id) {\n        cellUpdated = self.setCellValue(obj.third);\n      } else return false;\n    });\n\n    if (!cellUpdated) return;\n    Emitter.emit('player_played', this.playerName);\n    self.setState({\n      myTurn: false,\n    });\n    this.updateResult();\n  }\n\n  refreshData() {\n    const self = this;\n\n    if (this.state.myTurn && !this.state.pending && !this.state.gameEnded) return;\n    fetch(this.mainUrl + '/xoxo-games/get-game', {\n     method: 'post',\n     headers: {'Content-Type':'application/json'},\n     body: JSON.stringify(this.state.data)\n    }).then(function(response) {\n      return response.json();\n    })\n    .then(function(data) {\n      if (!!self.state.pending && data.players_number === 2) {\n        self.setState({\n          pending: false\n        });\n        self.state.data.second_player = data.second_player;\n      }\n\n      if (self.state.gameEnded && data.game_finished === 0) {\n        self.setState({\n          gameEnded: false,\n        });\n      }\n\n      self.setState({\n        myTurn: self.state.turn === data.player_turn,\n      });\n\n\n\n      if (!!data.result) {\n        self.setState({\n          cellData: JSON.parse(data.result),\n        });\n\n        if (!self.state.gameEnded) {\n          self.checkWinner();\n        }\n      }\n      self.rematch(data);\n    });\n  }\n\n  rematch(data) {\n    if (data.rematch_player1 === 1 && data.rematch_player2 === 1) {\n      this.setState({\n        gameEnded: false,\n        cellData: this.resetData(),\n        decisionNum: '0'\n      });\n      this.updateResult(null, '0', '0');\n    } else if ((this.playerNumber === 1 && data.rematch_player2 === 2) ||\n        (this.playerNumber === 2 && data.rematch_player1 === 2)) {\n      this.setState({\n        otherPlayerRefused: true\n      });\n    }\n\n    if (!this.state.gameEnded) {\n      this.setState({\n        decisionNum: '0',\n        otherPlayerRefused: false\n      });\n    }\n  }\n\n  checkWinner() {\n    const self = this;\n    const result = this.state.cellData;\n    if (_.isEmpty(result) || this.state.pending || this.state.gameEnded) return;\n    const tempData = [];\n    let numberOfFilledCells = 0;\n    _.each(result, function (obj) {\n      if (obj.first.value !== '')\n        numberOfFilledCells += 1;\n      if (obj.second.value !== '')\n        numberOfFilledCells += 1;\n      if (obj.third.value !== '')\n        numberOfFilledCells += 1;\n\n      tempData.push(obj.first.value);\n      tempData.push(obj.second.value);\n      tempData.push(obj.third.value);\n    });\n\n    const winningSetKeys = _.keys(winningSet);\n\n    _.each(winningSetKeys, function (key) {\n      if (self.checkValues(tempData, winningSet[key])) {\n        self.colorizeWinningCells(winningSet[key]);\n        return false;\n      }\n    });\n\n    if (numberOfFilledCells === 9) {\n      this.setState({gameEnded: true});\n      this.updateResult();\n    }\n  }\n\n  colorizeWinningCells(array) {\n    let winner = null;\n\n    _.each(array, function (obj) {\n      const num = obj + 1;\n      let el = document.getElementById('xoxo-cell' + num);\n      winner = el.innerHTML === 'X' ? 1 : 2;\n      el.classList.add('winning-cell');\n    });\n\n    const playerKey = `player${winner}Score`;\n    const playerScore = this.state[playerKey];\n\n    const attr = {\n      gameEnded: true\n    };\n\n    attr[playerKey] = playerScore + 1;\n    this.setState(attr);\n    this.updateResult();\n  }\n\n  checkValues(data, array) {\n    return data[array[0]] !== '' && data[array[0]] === data[array[1]] &&\n      data[array[0]] === data[array[2]];\n  }\n\n  componentDidMount() {\n    if (this.state.pending) {\n      this.intervalMsg = setInterval(() => this.updatingWaitingMsg(), 400);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n    clearInterval(this.intervalMsg);\n  }\n\n  setCellValue(cell) {\n    if (!cell.value) {\n      cell.value = this.state.turn;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkClass(value) {\n    return !!value ? 'add-class' : '';\n  }\n\n  updatingWaitingMsg() {\n    if (!this.state.pending) return;\n    if (_.endsWith(this.state.waitingMsg, ' . . . .')) {\n      this.setState({\n          waitingMsg: 'Waiting for opponent'\n      });\n    } else {\n      this.setState({\n          waitingMsg: this.state.waitingMsg + ' .'\n      });\n    }\n  }\n\n  render() {\n    const gamePendingStyle = this.state.pending ? {} : {display: 'none'};\n    const gameFull = !this.state.pending ? {display: 'inline-block', width: '100%', maxWidth: '400px'} : {display: 'none'};\n    const gameEndedStyle = this.state.gameEnded ? {} : {display: 'none'};\n    const playerRefusedToRematchStyle = !!this.state.otherPlayerRefused ? {} : {display: 'none'};\n    const decisionMadeStyle = this.state.decisionNum !== '0' && !this.state.otherPlayerRefused ? {} : {display: 'none'};\n    const rematchModalStyle = this.state.decisionNum !== '0' || this.state.otherPlayerRefused ? {display: 'none'} : {};\n    return (\n      <div className=\"xoxo-game\">\n        <header className=\"xoxo-game-header\">\n          <div className=\"row form-group\" style={{width: '100%'}}>\n            <div className=\"col-12 col-sm-3 col-xs-3\">\n              <h5>Player #1</h5>\n              <h5 style={{color: mainGreen}}>{this.state.data.first_player}</h5>\n               <h6 style={{color: mainGreen}}>{this.state.player1Score}</h6>\n            </div>\n            <div className=\"col-12 col-sm-6 col-xs-6 form-group\">\n              <h5>Game #</h5>\n              <h5 style={{color: mainGreen}}>{this.state.data.game_number}</h5>\n            </div>\n            <div className=\"col-12 col-sm-3 col-xs-3\">\n              <h5>Player #2</h5>\n              <h5 style={{color: mainGreen}}>{this.state.data.second_player}</h5>\n              <h6 style={{color: mainGreen}}>{this.state.player2Score}</h6>\n            </div>\n          </div>\n          <div className=\"row\" style={{width: '100%'}}>\n            <div className=\"col-12 col-sm-12\">\n              <div className='sweet-loading'>\n                <GridLoader\n                  css={override}\n                  sizeUnit={\"px\"}\n                  size={30}\n                  margin={'2px'}\n                  color={mainGreen}\n                  loading={this.state.pending}\n                />\n                <div style={gamePendingStyle}>\n                  <h4 style={{marginTop: '20px', color: mainGreen}}>{this.state.waitingMsg}</h4>\n                </div>\n              </div>\n              <div className=\"col-sm-3 col-xs-0\"></div>\n              <div className=\"col-sm-6 col-xs-12 no-padding\">\n                <Paper style={gameFull}>\n                  <Table>\n                    <TableBody style={{ width: '100%',\n                      overflowX: 'auto' }}>\n                      {this.state.cellData.map(row => (\n                        <TableRow>\n                          <TableCell id={row.first.key} key={row.first.key} align=\"center\" onClick={this.cellClicked} className={row.first.value !== '' ? 'value-added' : ''}>{row.first.value}</TableCell>\n                          <TableCell id={row.second.key} key={row.second.key} align=\"center\" onClick={this.cellClicked} className={row.second.value !== '' ? 'value-added' : ''}>{row.second.value}</TableCell>\n                          <TableCell id={row.third.key} key={row.third.key} align=\"center\" onClick={this.cellClicked} className={row.third.value !== '' ? 'value-added' : ''}>{row.third.value}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </Paper>\n              </div>\n              <div className=\"col-sm-3 col-xs-0\"></div>\n            </div>\n          </div>\n          <div className=\"game-is-over\" style={gameEndedStyle}>\n            <div style={playerRefusedToRematchStyle}>\n              <div className=\"col-12 col-sm-12\">\n                <p className=\"decision\">The other player doesn't want to rematch.</p>\n                <ExitDiv/>\n              </div>\n            </div>\n            <div style={decisionMadeStyle}>\n              <div className=\"col-12 col-sm-12\">\n                <DecisionDiv decision={this.state.decisionNum}/>\n              </div>\n            </div>\n\n            <div style={rematchModalStyle}>\n              <div className=\"row\" style={{marginTop: '10px'}}>\n                <div className=\"col-12 col-sm-12\">\n                  <p className=\"decision\">Wanna rematch?</p>\n                </div>\n              </div>\n              <div className=\"row\" style={{marginTop: '10px', marginBottom: '10px'}}>\n                <div className=\"col-6 col-xs-6\">\n                  <input type=\"button\" value=\"Yes\" className=\"btn btn-green\" onClick={() => this.updateRematchDecision('1')}/>\n                </div>\n                <div className=\"col-6 col-xs-6\">\n                  <input type=\"button\" value=\"No\" className=\"btn btn-red\" onClick={() => this.updateRematchDecision('2')}/>\n                </div>\n              </div>\n            </div>\n          </div>\n       </header>\n      </div>\n    );\n  }\n}\n\nfunction DecisionDiv(props) {\n  if (props.decision === '1')\n    return (<p className=\"decision\">Waiting for opponent response</p>);\n  else\n    return ExitDiv();\n}\n\nfunction ExitDiv() {\n  const exitLink = `${utils.getServerURL()}`;\n  return (<a href={exitLink} className=\"btn btn-default\" style={{marginBottom: '5px'}}>Exit</a>);\n}\n\nexport default XoxoGame;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport Switch from '@material-ui/core/Switch';\nimport _ from 'lodash';\nimport XoxoGame from './XoxoGame';\nimport './XoxoGame.css';\n\nconst utils =  require('../utils.js');\n\nclass XoxoLogin extends Component {\n  constructor(props) {\n\t  super(props);\n\t  this.state = {\n\t\treason: null,\n\t\trandomGame: true\n\t  };\n\t  this.mainUrl = utils.getMainUrl();\n\t  this.loginToGame = this.loginToGame.bind(this);\n\t  this.handleSwitchChange = this.handleSwitchChange.bind(this);\n   };\n\n  loginToGame(event) {\n\tevent.preventDefault();\n\tconst self = this;\n\tthis.setState({reason: null});\n\tif (this.state.randomGame) {\n\t\tthis.refs.number.value = null;\n\t\tthis.refs.pass.value = null;\n\t}\n\tconst data = {\n\t  playerName: this.refs.name.value,\n\t  gameNumber: this.refs.number.value,\n\t  gamePass: this.refs.pass.value,\n\t};\n\tfetch(this.mainUrl + '/xoxo-games/game-login', {\n\t method: 'post',\n\t headers: {'Content-Type':'application/json'},\n\t body: JSON.stringify(data)\n\t}).then(function(response) {\n\t  return response.json();\n\t}).then(function(result) {\n\t  console.log(result);\n\t  if (!!_.get(result, 'failure')) {\n\t\tself.setState({\n\t\t  reason: result.reason\n\t\t});\n\t  } else {\n\t\tReactDOM.render(<XoxoGame data={result.obj}/>, document.getElementById('root'));\n\t  }\n\t});\n  }\n\n  handleSwitchChange() {\n\tthis.setState({randomGame: !this.state.randomGame});\n  }\n  render() {\n\tconst notRandomStyle = !this.state.randomGame ? {} : {display: 'none'};\n\tconst randomStyle = this.state.randomGame ? {} : {display: 'none'};\n\tconst isRequired = this.state.randomGame ? false : true;\n\treturn (\n\t  <div className=\"xoxo-game\">\n\t\t<header className=\"xoxo-game-header row\">\n\t\t  <Link to=\"/game-xoxo-main\" className=\"btn btn-default back-btn\">Back</Link>\n\t\t  <div className=\"col-12 col-sm-4\"></div>\n\t\t\t<div className=\"col-12 col-sm-4\">\n\t\t\t  <form onSubmit={this.loginToGame}>\n\t\t\t\t<span style={{display: 'block', color: 'red'}}>{this.state.reason}</span>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t  <div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t  required\n\t\t\t\t\t\t  ref=\"name\"\n\t\t\t\t\t\t  type=\"text\"\n\t\t\t\t\t\t  className=\"form-control\"\n\t\t\t\t\t\t  placeholder=\"Your Name\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <label>Random Game?</label>\n\t\t\t\t\t  <Switch\n\t\t\t\t\t\tchecked={this.state.randomGame}\n\t\t\t\t\t\tonChange={() => this.handleSwitchChange('randomGame')}\n\t\t\t\t\t\tvalue=\"checkedB\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tinputProps={{ 'aria-label': 'primary checkbox' }}\n\t\t\t\t\t  />\n\t\t\t\t</div>\n\t\t\t\t<div style={notRandomStyle}>\n\t\t\t\t  <div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\t  required={isRequired}\n\t\t\t\t\t  ref=\"number\"\n\t\t\t\t\t  type=\"text\"\n\t\t\t\t\t  className=\"form-control\"\n\t\t\t\t\t  placeholder=\"Game Number\"\n\t\t\t\t\t/>\n\t\t\t\t  </div>\n\t\t\t\t  <div className=\"form-group\">\n\t\t\t\t\t<input\n\t\t\t\t\t  required={isRequired}\n\t\t\t\t\t  ref=\"pass\"\n\t\t\t\t\t  type=\"password\"\n\t\t\t\t\t  className=\"form-control\"\n\t\t\t\t\t  placeholder=\"Game Password\"\n\t\t\t\t\t/>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t\t\t\t<SubmitButton notRandom={!this.state.randomGame} randomStyle={randomStyle}/>\n\t\t\t  </form>\n\t\t\t</div>\n\t\t  <div className=\"col-12 col-sm-4\"></div>\n\t   </header>\n\t  </div>\n\t);\n  }\n}\n\nfunction SubmitButton(props) {\n\treturn (<div className=\"form-group\">\n\t\t\t  <button\n\t\t\t\tid=\"submit-btn\"\n\t\t\t\ttype=\"submit\"\n\t\t\t\tclassName=\"btn btn-default\">\n\t\t\t\t{props.notRandom ? 'Login' : 'Search'}\n\t\t\t\t</button>\n\t\t\t</div>);\n  }\nexport default XoxoLogin;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './XoxoGame.css';\n\nconst utils =  require('../utils.js');\n\nclass XoxoMainView extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {};\n      this.mainUrl = utils.getMainUrl();\n\n  };\n\n  render() {\n    return (\n      <div className=\"xoxo-game\">\n        <header className=\"xoxo-game-header row\">\n          <div className=\"col-12 col-sm-4\"></div>\n            <div className=\"col-12 col-sm-4\">\n              <form >\n                <div className=\"form-group login-form\">\n                  <Link to=\"/game-xoxo-create\" className=\"btn btn-default\">Create Game</Link>\n                  <Link to=\"/game-xoxo-login\" className=\"btn btn-default\">Enter a Game</Link>\n                </div>\n              </form>\n            </div>\n          <div className=\"col-12 col-sm-4\"></div>\n       </header>\n      </div>\n    );\n  }\n}\n\nexport default XoxoMainView;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from \"react-router-dom\";\nimport Switch from '@material-ui/core/Switch';\nimport XoxoGame from './XoxoGame';\nimport './XoxoGame.css';\n\nconst utils =  require('../utils.js');\n\nclass XoxoCreateGameView extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        privateSwitch: false\n      };\n      this.mainUrl = utils.getMainUrl();\n      this.handleSwitchChange = this.handleSwitchChange.bind(this);\n      this.createGame = this.createGame.bind(this);\n  };\n\n  handleSwitchChange () {\n    this.setState({\n      privateSwitch: !this.state.privateSwitch\n    });\n  }\n\n  createGame (event) {\n    event.preventDefault();\n    const data = {\n      pass: this.refs.pass.value,\n      name: this.refs.name.value\n    };\n    this.refs.pass.value = '';\n    this.refs.name.value = '';\n    fetch(this.mainUrl + '/xoxo-games/create-game', {\n     method: 'post',\n     headers: {'Content-Type':'application/json'},\n     body: JSON.stringify(data)\n    }).then(function(response) {\n      return response.json();\n    }).then(function(result) {\n      ReactDOM.render(<XoxoGame data={result}/>, document.getElementById('root'));\n    });\n   }\n\n  render() {\n    const privateStyle = this.state.privateSwitch ? {} : {display: 'none'};\n    return (\n      <div className=\"xoxo-game\">\n        <header className=\"xoxo-game-header row\">\n          <Link to=\"/game-xoxo-main\" className=\"btn btn-default back-btn\">Back</Link>\n          <div className=\"col-12 col-sm-4\"></div>\n            <div className=\"col-12 col-sm-4\">\n              <form onSubmit={this.createGame}>\n                <div className=\"row\">\n                  <div className=\"col-12 form-group\">\n                      <input\n                        required\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Your Name\"\n                        name=\"name\"\n                        ref=\"name\"\n                      />\n                  </div>\n                  <div className=\"col-12 form-group\">\n                      <label>Private?</label>\n                      <Switch\n                        checked={this.state.privateSwitch}\n                        onChange={() => this.handleSwitchChange('privateSwitch')}\n                        value=\"checkedB\"\n                        color=\"primary\"\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      />\n                  </div>\n                  <div style={privateStyle}>\n                    <div className=\"col-12 form-group\">\n                      <input\n                        required={this.state.privateSwitch}\n                        type=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        name=\"pass\"\n                        ref=\"pass\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-12 form-group\">\n                    <button\n                      type=\"submit\"\n                      className=\"btn btn-default\">\n                        Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          <div className=\"col-12 col-sm-4\"></div>\n       </header>\n      </div>\n    );\n  }\n}\n\nexport default XoxoCreateGameView;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './Main/App';\nimport XoxoLogin from './XoxoGame/XoxoLogin';\n// import XoxoGame from './XoxoGame/XoxoGame';\nimport XoxoMainView from './XoxoGame/XoxoMainView';\nimport XoxoCreateGameView from './XoxoGame/XoxoCreateGameView';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n// import Header from './components/HeaderComponent.js';\n// import Footer from './components/FooterComponent.js';\nimport { HashRouter, Route } from 'react-router-dom';\nconst routing = (\n  <HashRouter basename=\"/\">\n    <div>\n      {/* <Header /> */}\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/game-xoxo-login\" component={XoxoLogin} />\n      <Route path=\"/game-xoxo-main\" component={XoxoMainView} />\n      <Route path=\"/game-xoxo-create\" component={XoxoCreateGameView} />\n      {/* <Route path=\"/game-xoxo\" component={XoxoGame} /> */}\n      {/* <Footer /> */}\n    </div>\n  </HashRouter>\n);\nReactDOM.render(routing, document.getElementById('root'));\nserviceWorker.register();\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './Main/App.css';\n// import App from './Main/App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}